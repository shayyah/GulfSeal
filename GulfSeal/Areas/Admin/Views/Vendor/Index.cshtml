@model IEnumerable<GulfSeal.Models.Vendor>

@{
    ViewBag.Title = "koki";
}

<h2>nono</h2>
<h2>toto</h2>


<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">

    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Longitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Latitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InsideKSA)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Phone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Longitude)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Latitude)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.InsideKSA)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>


<div id="map1" style="height:400px;width:100%;"></div>

@section scripts {

<script>

    function initMap() {
        var markers = [];
        var Dubai = { lat: 25.2048, lng: 55.2708 };


        var map = new google.maps.Map(document.getElementById('map1'), {
            zoom: 3,
            center: Dubai,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });


        //Center two map at user location
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

            map.setCenter(pos);


            },
            function () {

        }, { timeout: 5000 }
            );
        }


                var prev_infowindow = false;
                @foreach (var provider in Model)
                {

                    <text>
                        var markerlatLng = new google.maps.LatLng(@(provider.Latitude), @(provider.Longitude));
                         
                        var name = '@(provider.Name)';
                        var To = '@(provider.Phone)' + ' : ' + '@(provider.Name)';
                        var content = '<b>Vendor: </b>' + '@(provider.Name)' +
                            ' <br/><br/><b>@(Html.ActionLink("Details", "Details", "Vendor", new { Area = "Admin",Id = provider.Id},null)) </b>';
         

         
                        var marker = new google.maps.Marker({
                            position: markerlatLng,
                            title: name,
                            map: map 
                        });

                        markers.push(marker);
                        var infowindow = new google.maps.InfoWindow({
                            content: content
                        });

                        google.maps.event.addListener(marker,'click', (function(marker,content,infowindow){
                            return function () {

                                if (prev_infowindow) {
                                    prev_infowindow.close();
                                }

                                prev_infowindow = infowindow;
                                infowindow.setContent(content);
                                infowindow.open(map,marker);
                            };
                        })(marker,content,infowindow));

                    </text>
                }



            // Add a marker clusterer to manage the markers.
            var markerCluster = new MarkerClusterer(map, markers,
                 { imagePath: '/Content/img/map/m'  });
            }


</script>



     
<script src="~/Content/markerclusterer.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBl4Pzqz_A5zt10KpJI4urZPothek-Y2a8&callback=initMap"
        async defer></script>

}