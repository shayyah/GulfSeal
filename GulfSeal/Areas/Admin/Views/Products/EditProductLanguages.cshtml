@model GulfSeal.Areas.Admin.Models.ViewModels.ProductTranslationsViewModel
@{
    ViewBag.Title = "Create Content";
}

<h2>Create Content</h2>




<form action="~/Products/EditProductLanguages" method="post">

    @Html.AntiForgeryToken()


    <input type="hidden" id="productId" name="productId" value="@ViewBag.productId" />

    <div class="form-horizontal">
        <h4>Languages </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @{ int i = 0;}
        @foreach (var language in ViewBag.Languages)
        {

            <div class="form-group">
                @language.Name
            </div>

            <input type="hidden" id="ProductContents_@(i)__LanguageId" name="ProductContents[@(i)].LanguageId" value="@language.Id" />

            <input type="hidden" id="ProductContents_@(i)__productId" name="ProductContents[@(i)].productId" value="@ViewBag.productId" />

            <div class="form-group">
                Name
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductContents[i].Name, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                ReinforcedDensity
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductContents[i].ReinforcedDensity, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                ReinforcedType
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductContents[i].ReinforcedType, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                ServiceType
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductContents[i].ServiceType, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                Thickness
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductContents[i].Thickness, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                Type
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductContents[i].Type, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                Width
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductContents[i].Width, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                Length
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductContents[i].Length, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            i = i + 1;
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

